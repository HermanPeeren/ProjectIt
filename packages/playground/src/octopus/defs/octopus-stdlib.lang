language octopus

abstract concept StdLibClassifier implements IClassifier {
}

concept StdLibDataType implements IDataType {
}

//concept StdLibOclMessageType base OclMessageType {
//    reference referredOperation: Operation;
//}

concept StdLibPrimitiveType implements IPrimitiveType {
}

concept StdLibTupleType implements ITupleType {
}

concept StdLibOperation implements IOperation {
}

concept StdLibParameter implements IParameter {
}

limited OclIterator {
    name: string;
    textualRepresentation: string; // probably not needed, parameterName: can be handled in .edit file
//    reference returnType?: IClassifier;
    OCL_Select        	= { textualRepresentation: "select"}
    OCL_ForAll        	= { textualRepresentation: "forAll"}
    OCL_Exists        	= { textualRepresentation: "exists"}
    OCL_Reject        	= { textualRepresentation: "reject"}
    OCL_Collect       	= { textualRepresentation: "collect"}
    OCL_IsUnique      	= { textualRepresentation: "isUnique"}
    OCL_SortedBy      	= { textualRepresentation: "sortedBy"}
    OCL_AnyIterator   	= { textualRepresentation: "any"}
    OCL_One          	= { textualRepresentation: "one"}
    OCL_CollectNested	= { textualRepresentation: "collectNested"}
    OCL_Iterate       	= { textualRepresentation: "iterate"}
}

concept StdLibCollectionType implements ICollectionType {
    name: string;
//    Set
//    OrderedSet
//    Bag
//    Sequence
//    Collection
}
